"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__GetDependency__=exports.__get__=_get__;exports.__set__=exports.__Rewire__=_set__;exports.__ResetDependency__=_reset__;exports.default=exports.__RewireAPI__=exports.HistoryManager=void 0;var _winston=_interopRequireDefault(require("winston"));var _fs=_interopRequireDefault(require("fs"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * Builds a history manager object.
 *
 * @class HistoryManager
 * @param {string} historyFile - A file name to load and save history data to.
 * @param {number} historyMax - The maximum number of history items to store in the history file.
 */class HistoryManager{constructor(historyFile,historyMax){this.historyFile=historyFile;this.historyMax=historyMax;this.history=[];}/**
   * Loads a string array of from the historyFile which is stored in the json format.
   *
   * @memberof HistoryManager
   * @instance
   * @returns {Array.<string>} - The history loaded from the file.
   */loadHistory(){_get__("logger").debug('Loading history from file');this.history=[];try{const data=_get__("fs").readFileSync(this.historyFile);this.history=JSON.parse(data);}catch(error){_get__("logger").warn(`Ignoring error loading history: ${error}`);}return this.history;}/**
   * Adds a new string {theme} to the array history, if the array is larger than historyMax then the oldest string is bumped off the array.
   *
   * @memberof HistoryManager
   * @instance
   * @param {string} theme - The string to add to the history array.
   * @returns {Array.<string>} - The modified history array.
   */addHistory(theme){_get__("logger").debug('Adding to history memory');// Add item to beginning of array
this.history.unshift(theme);// Check history length
if(this.history.length>this.historyMax){// Remove last item of array
this.history.pop();}return this.history;}/**
   * Saves a string array to the historyFile in the json format.
   *
   * @memberof HistoryManager
   * @instance
   * @returns {undefined}
   */saveHistory(){_get__("logger").debug('Saving history to file');// Save history
_get__("fs").writeFileSync(this.historyFile,JSON.stringify(this.history));}}exports.HistoryManager=HistoryManager;function _getGlobalObject(){try{if(!!global){return global;}}catch(e){try{if(!!window){return window;}}catch(e){return this;}}};var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){let globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0;}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;}return _RewireModuleId__;}function _getRewireRegistry__(){let theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=Object.create(null);}return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;}function _getRewiredData__(){let moduleId=_getRewireModuleId__();let registry=_getRewireRegistry__();let rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=Object.create(null);rewireData=registry[moduleId];}return rewireData;}(function registerResetAll(){let theGlobalVariable=_getGlobalObject();if(!theGlobalVariable['__rewire_reset_all__']){theGlobalVariable['__rewire_reset_all__']=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=Object.create(null);};}})();var INTENTIONAL_UNDEFINED='__INTENTIONAL_UNDEFINED__';let _RewireAPI__={};exports.__RewireAPI__=_RewireAPI__;(function(){function addPropertyToAPIObject(name,value){Object.defineProperty(_RewireAPI__,name,{value:value,enumerable:false,configurable:true});}addPropertyToAPIObject('__get__',_get__);addPropertyToAPIObject('__GetDependency__',_get__);addPropertyToAPIObject('__Rewire__',_set__);addPropertyToAPIObject('__set__',_set__);addPropertyToAPIObject('__reset__',_reset__);addPropertyToAPIObject('__ResetDependency__',_reset__);addPropertyToAPIObject('__with__',_with__);})();function _get__(variableName){let rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName);}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined;}else{return value;}}}function _get_original__(variableName){switch(variableName){case"logger":return _winston.default;case"fs":return _fs.default;}return undefined;}function _assign__(variableName,value){let rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value);}else{return rewireData[variableName]=value;}}function _set_original__(variableName,_value){switch(variableName){}return undefined;}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==='++'?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue;}function _set__(variableName,value){let rewireData=_getRewiredData__();if(typeof variableName==='object'){Object.keys(variableName).forEach(function(name){rewireData[name]=variableName[name];});return function(){Object.keys(variableName).forEach(function(name){_reset__(variableName);});};}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED;}else{rewireData[variableName]=value;}return function(){_reset__(variableName);};}}function _reset__(variableName){let rewireData=_getRewiredData__();delete rewireData[variableName];if(Object.keys(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__];};}function _with__(object){let rewireData=_getRewiredData__();var rewiredVariableNames=Object.keys(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName];});}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName];});let result=callback();if(!!result&&typeof result.then=='function'){result.then(reset).catch(reset);}else{reset();}return result;};}var _default=_RewireAPI__;exports.default=_default;