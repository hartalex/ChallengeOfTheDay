"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__ResetDependency__=_reset__;exports.__RewireAPI__=void 0;exports.__set__=exports.__Rewire__=_set__;exports.__GetDependency__=exports.__get__=_get__;exports.chooseTheme=chooseTheme;exports.default=void 0;var _winston=_interopRequireDefault(require("winston"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const defaultTimeout=50;const indexNotFound=-1;const incrementAmount=1;const emptyArrayLength=0;const indexOfFirstCharacter=0;const indexOfSecondCharacter=1;/**
 * Creates a theme string using the list of adjectives and themes, and the provided history.
 * @param {object} inputs - An object of input arrays.
 * @param {Array.<string>} inputs.adjectives - A list of adjectives.
 * @param {Array.<string>} inputs.themes - A list of themes.
 * @param {Array.<string>} history - A list of themes created previously. Used to weed out duplicates.
 * @param {number} timeoutMax - The max amount of times to try to generate a unique theme.
 * @returns {string} - The generated theme string.
 */async function chooseTheme(inputs,history=[],timeoutMax=_get__("defaultTimeout")){const{adjectives,themes}=inputs;_get__("logger").debug('Choosing theme');_get__("validateParams")(adjectives,themes,history);let timeoutIndex=0;let chosenTheme=_get__("getRandomTheme")(adjectives,themes);while(history.indexOf(chosenTheme)!==_get__("indexNotFound")&&timeoutIndex<timeoutMax){chosenTheme=_get__("getRandomTheme")(adjectives,themes);timeoutIndex+=_get__("incrementAmount");}if(timeoutIndex>=timeoutMax){// Should never happen
throw new Error('Theme Chooser Timed out');}_get__("logger").debug('Theme Chooser Done');return chosenTheme;}/**
 * Creates a theme by combining a random adjective and a random theme.
 * @access private
 * @param {Array} adjectives - An array of string adjectives.
 * @param {Array} themes - An array of string themes.
 * @returns {string} - The theme created by combining a random adjective and a random theme.
 */function getRandomTheme(adjectives,themes){const adjrandomNumber=Math.random()*adjectives.length;const adjindex=Math.floor(adjrandomNumber);const randomNumber=Math.random()*themes.length;const index=Math.floor(randomNumber);const ucAdjective=_get__("jsUcfirst")(adjectives[adjindex]);const ucTheme=_get__("jsUcfirst")(themes[index]);return`${ucAdjective} ${ucTheme}`;}/**
 * Validates adjectives, themes, and history parameters.
 * @param {Array.<string>} adjectives - A list of adjectives.
 * @param {Array.<string>} themes - A list of themes.
 * @param {Array.<string>} history - A list of themes created previously. Used to weed out duplicates.
 * @returns {undefined}
 */function validateParams(adjectives,themes,history){_get__("validateArray")(adjectives,'adjectives');_get__("validateArray")(themes,'themes');if(history.length>=themes.length){throw new Error('History parameter array is greater than or equal to themes parameter array.\n No New Themes Will Be Found');}}/**
 * Validates an Array.
 * @param {Array.<string>} array - The array to validate.
 * @param {string} name - The name of the array used in error messages.
 * @returns {undefined}
 */function validateArray(array,name){if(!Array.isArray(array)){throw new Error(`${name} parameter is not an array`);}else if(array.length===_get__("emptyArrayLength")){throw new Error(`${name} parameter array is empty`);}}/**
 * Transforms the passed in string and makes the first character uppercase.
 * @access private
 * @param {string} string - The string to transform.
 * @returns {string} - The passed in string with the first character changed to uppercase.
 */function jsUcfirst(string){return string.charAt(_get__("indexOfFirstCharacter")).toUpperCase()+string.slice(_get__("indexOfSecondCharacter"));}function _getGlobalObject(){try{if(!!global){return global;}}catch(e){try{if(!!window){return window;}}catch(e){return this;}}};var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){let globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0;}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;}return _RewireModuleId__;}function _getRewireRegistry__(){let theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=Object.create(null);}return theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__;}function _getRewiredData__(){let moduleId=_getRewireModuleId__();let registry=_getRewireRegistry__();let rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=Object.create(null);rewireData=registry[moduleId];}return rewireData;}(function registerResetAll(){let theGlobalVariable=_getGlobalObject();if(!theGlobalVariable['__rewire_reset_all__']){theGlobalVariable['__rewire_reset_all__']=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=Object.create(null);};}})();var INTENTIONAL_UNDEFINED='__INTENTIONAL_UNDEFINED__';let _RewireAPI__=exports.__RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){Object.defineProperty(_RewireAPI__,name,{value:value,enumerable:false,configurable:true});}addPropertyToAPIObject('__get__',_get__);addPropertyToAPIObject('__GetDependency__',_get__);addPropertyToAPIObject('__Rewire__',_set__);addPropertyToAPIObject('__set__',_set__);addPropertyToAPIObject('__reset__',_reset__);addPropertyToAPIObject('__ResetDependency__',_reset__);addPropertyToAPIObject('__with__',_with__);})();function _get__(variableName){let rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName);}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined;}else{return value;}}}function _get_original__(variableName){switch(variableName){case"defaultTimeout":return defaultTimeout;case"logger":return _winston.default;case"validateParams":return validateParams;case"getRandomTheme":return getRandomTheme;case"indexNotFound":return indexNotFound;case"incrementAmount":return incrementAmount;case"jsUcfirst":return jsUcfirst;case"validateArray":return validateArray;case"emptyArrayLength":return emptyArrayLength;case"indexOfFirstCharacter":return indexOfFirstCharacter;case"indexOfSecondCharacter":return indexOfSecondCharacter;}return undefined;}function _assign__(variableName,value){let rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value);}else{return rewireData[variableName]=value;}}function _set_original__(variableName,_value){switch(variableName){}return undefined;}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==='++'?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue;}function _set__(variableName,value){let rewireData=_getRewiredData__();if(typeof variableName==='object'){Object.keys(variableName).forEach(function(name){rewireData[name]=variableName[name];});return function(){Object.keys(variableName).forEach(function(name){_reset__(variableName);});};}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED;}else{rewireData[variableName]=value;}return function(){_reset__(variableName);};}}function _reset__(variableName){let rewireData=_getRewiredData__();delete rewireData[variableName];if(Object.keys(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__];};}function _with__(object){let rewireData=_getRewiredData__();var rewiredVariableNames=Object.keys(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName];});}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName];});let result=callback();if(!!result&&typeof result.then=='function'){result.then(reset).catch(reset);}else{reset();}return result;};}var _default=exports.default=_RewireAPI__;